---
- name: Provision OpenSearch cluster in AWS
# RUN command for This automation 
# ansible-playbook opensearch.yml -e OPENSEARCH_PASSWORD=my-password
  tasks:
    - name: Create OpenSearch cluster
      ec2_instance:
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        key_name: "{{ key_name }}"
        security_group: "{{ security_group }}"
        subnet_id: "{{ subnet_id }}"
        image_id: ami-0c94855ba95c71c99 # Amazon Linux 2
        user_data: |
          #!/bin/bash
          echo "Installing OpenSearch..."
          sudo yum update -y
          sudo amazon-linux-extras install -y java-openjdk11
          sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch
          sudo tee /etc/yum.repos.d/opensearch.repo <<EOF
          [opensearch-1.x]
          name=OpenSearch repository
          baseurl=https://artifacts.opensearch.org/releases/1.x/yum
          gpgcheck=1
          gpgkey=https://artifacts.opensearch.org/GPG-KEY-opensearch
          enabled=1
          autorefresh=1
          type=rpm-md
          EOF
          sudo yum install -y opensearch-{{ opensearch_version }}
          sudo systemctl enable opensearch.service
          sudo systemctl start opensearch.service
        count: "{{ opensearch_instance_count }}"
        instance_tags:
          Name: "{{ opensearch_cluster_name }}-{{ item }}"
        instance_profile_name: my-instance-profile
        wait: yes
        assign_public_ip: no
        volumes:
          - device_name: /dev/sda1
            volume_size: 50
            volume_type: gp2
        network_interfaces:
          - device_index: 0
            subnet_id: "{{ subnet_id }}"
            groups: ["{{ security_group }}"]
            associate_public_ip_address: false
            delete_on_termination: true
            private_ip_address: "10.0.0.{{ 10 + item }}"
            description: "OpenSearch instance {{ item }}"

    - name: Wait for OpenSearch cluster to be ready
      uri:
        url: "https://{{ opensearch_cluster_name }}-1.{{ region }}.es.amazonaws.com/"
        return_content: yes
        status_code: 200
        timeout: 300
      register: opensearch_ready
      until: opensearch_ready.status == 200
      retries: 10
      delay: 30

    - name: Configure OpenSearch cluster
      opensearch_configure:
        host: "{{ opensearch_cluster_name }}-1.{{ region }}.es.amazonaws.com"
        port: 443
        username: admin
        password: "{{ lookup('env', 'OPENSEARCH_PASSWORD') }}"
        state: present
        config:
          cluster.name: "{{ opensearch_cluster_name }}"
          node.name: "{{ inventory_hostname }}"
          node.master: true
          node.data: true
          node.ingest: true
          network.host: _ec2:privateIpv4_
          discovery.seed_hosts: "{{ opensearch_cluster_name }}-1.{{ region }}.es.amazonaws.com,{{ opensearch_cluster_name }}-2.{{ region }}.es.amazonaws.com,{{ opensearch_cluster_name }}-3.{{ region }}.es.amazonaws.com"
          cluster.initial_master_nodes: "{{ opensearch_cluster_name }}-1,{{ opensearch_cluster_name }}-2,{{ opensearch_cluster_name }}-3"
          xpack.security.enabled: true
          xpack.security.transport.ssl.enabled: true
          xpack.security.transport.ssl.verification_mode: certificate
          xpack.security.http.ssl.enabled: true
          xpack.security.http.ssl.verification_mode: certificate
          xpack.security.http.ssl.client_authentication: optional
          xpack.security.authc.realms.native.native1.order: 0
          xpack.security.authc.realms.native.native1.enabled: true
          xpack.security.authc.realms.native.native1.users:
            admin: "{{ lookup('env', 'OPENSEARCH_PASSWORD') }}"
        wait_for_completion: true
        timeout: 300

